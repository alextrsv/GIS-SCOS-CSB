# Data base configuration
spring.jpa.hibernate.ddl-auto=create
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}
spring.jpa.open-in-view=false

## Quartz
#spring.quartz.job-store-type=jdbc
#spring.quartz.jdbc.initialize-schema=never
#spring.quartz.properties.org.quartz.jobStore.driverDelegateClass=org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
#
#spring.quartz.properties.org.quartz.scheduler.instanceName = QRGenerationScheduler
#spring.quartz.properties.org.quartz.scheduler.instanceId = AUTO
#spring.quartz.properties.org.quartz.jobStore.isClustered = false

# Uploading files
upload.dir=PassFiles
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=200MB

# KeyCloak
#keycloak.auth-server-url=auth-dev.online.edu.ru
#keycloak.realm=portfolio
#keycloak.resource=547dae81-54b9-4f7a-8c8d-3c673d83a66e
#keycloak.bearer-only=true
#
#keycloak.security-constraints=
#keycloak.security-constraints.securityCollections=
#  security-constraints:
#    - authRoles:
#        - uma_authorization
#      securityCollections:
#        - patterns:
#            - /api/*
spring.application.name=${APPLICATION_NAME:spring-security-keycloak-oauth}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${OAUTH2_RESSERVER_JWT}

#spring.security.oauth2.client.provider.keycloak.issuer-uri=auth-dev.online.edu.ru/realms/portfolio
#spring.security.oauth2.client.registration.keycloak.client-id=547dae81-54b9-4f7a-8c8d-3c673d83a66e
